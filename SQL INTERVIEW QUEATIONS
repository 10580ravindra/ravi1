 1.how to change data type with data in table
 A. 1).first check table constraints 
    2).create table with reference of originol table 
    3).truncate originol table
    4).alter data type for that field in originol table 
    5).insert data into createde table to originol table 
    6).enable constraints 
2.How to disable constraint 
A.alter table table_name disable constraint constr_nm
2.How to enable constraint 
A.alter table table_name enable constraint constr_nm 
3.what is simple view and complex view.
A.simple view is accessing with single table.and it is not allowed dml operations and function like group by,count,having.
  complex views are accessing with multiple table and its allowed dml operations and aggregate functions.
4.what is the diff between view meterilized view.
A.The main difference between views and materialized views is that views are dynamic and materialized views are static. This means that views always reflect the latest data from the underlying tables or views, while materialized views only show the data from the last refresh.
5.diff between rownum and rowid.
A.The actual difference between rowid and rownum is, that rowid is a permanent unique identifier for that row. However, the rownum is temporary. If you change your query, the rownum number will refer to another row, the rowid won't. So the ROWNUM is a consecutive number which applicable for a specific SQL statement only.
6.Types of Materilized views in oracle.
A.1.create materialized view <viewnm>
[build immediet/build defeored] or
[on demand and on commit] or 
[refresh complete/refresh fast/refersh force] as <select * from tablenm>
7.what is the syntax of materialized view log.
A.create materialized view log on <table name>
Note:-we need primary key on base table for creating log on meterailzed view 
8.what is normalization .
A.Normalization is the process to eliminate data redundancy and enhance data integrity in the table.
Normalization also helps to organize the data in the database. It is a multi-step process that sets the 
data into tabular form and removes the duplicated data from the relational tables.
9.what is Denormalization .
A.Denormalization is the process of adding precomputed redundant data to an otherwise normalized relational database to improve read performance of the database. Normalizing a database involves removing redundancy so only a single copy exists of each piece of information.
10.hoe many ways we can write materialized views;
A.create MATERIALIZED view mvravi as select * from emp;
select * from mvravi;
create MATERIALIZED view mvravi1 build IMMEDIATE as select * from emp;
select * from mvravi1;
exec dbms_mview.refresh('mvravi6');
create MATERIALIZED view mvravi2 build DEFERRED as select * from emp;
select * from mvravi2;
create MATERIALIZED view mvravi3 refresh on demand as select * from emp;
select * from mvravi3;
create MATERIALIZED view mvravi4 refresh on commit as select * from emp;
select * from mvravi4;
create MATERIALIZED view mvravi5 REFRESH FAST ON demand as select * from emp;
select * from mvravi5;
create MATERIALIZED view mvravi6 REFRESH complete  as select * from emp;
select * from mvravi6;
create MATERIALIZED view mvravi7 REFRESH fast  as select * from emp;
select * from mvravi7;
11.
